AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation VPC example for Nuage VSP
Parameters:
  VpcCidr:
    Type: String
    Description: IP Address range for the VPN connected VPC
    MinLength: '9'
    MaxLength: '18'
    Default: 10.1.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  AccessSubnetCidr:
    Type: String
    Description: CIDR for subnet in access network with internet access
    MinLength: '9'
    MaxLength: '18'
    Default: 10.1.1.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  MgmtSubnetCidr:
    Type: String
    Description: CIDR for subnet in management network with outgoing internet (NAT) access
    MinLength: '9'
    MaxLength: '18'
    Default: 10.1.2.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  DataSubnetCidr:
    Type: String
    Description: CIDR for subnet in private data network
    MinLength: '9'
    MaxLength: '18'
    Default: 10.1.3.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      CidrBlock: !Ref VpcCidr
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  AccessSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref AccessSubnetCidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - Access-Subnet
        - Key: Description
          Value: Subnet with internet access
  MgmtSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref MgmtSubnetCidr
      MapPublicIpOnLaunch: false
      AvailabilityZone: !GetAtt
        - AccessSubnet
        - AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - Management-Subnet
        - Key: Description
          Value: Subnet with outgoing (NAT) internet access
  DataSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref DataSubnetCidr
      MapPublicIpOnLaunch: false
      AvailabilityZone: !GetAtt
        - AccessSubnet
        - AvailabilityZone
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - Data-Subnet
        - Key: Description
          Value: Private subnet
  VsdMgmtEni:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      SubnetId: !Ref MgmtSubnet
      Description: VSD Management network interface
      SourceDestCheck: 'false'
      GroupSet:
        - !Ref MgmtSecurityGroup
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - VSD Management ENI
        - Key: Stack
          Value: !Ref 'AWS::StackName'
        - Key: Network
          Value: Management Subnet
  ProxyAccessEni:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      SubnetId: !Ref AccessSubnet
      Description: Proxy Access network interface
      GroupSet:
        - !Ref AccessSecurityGroup
      SourceDestCheck: 'false'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - Proxy Access ENI
        - Key: Stack
          Value: !Ref 'AWS::StackName'
        - Key: Network
          Value: Access Network
  ProxyMgmtEni:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      SubnetId: !Ref MgmtSubnet
      Description: Proxy Management network interface
      SourceDestCheck: 'false'
      GroupSet:
        - !Ref MgmtSecurityGroup
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - Proxy Management ENI
        - Key: Stack
          Value: !Ref 'AWS::StackName'
        - Key: Network
          Value: Management Subnet
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  InternetGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  AccessRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackName'
  AccessInternetRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref AccessRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  AccessSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref AccessSubnet
      RouteTableId: !Ref AccessRouteTable
  NatEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc
  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NatEIP
        - AllocationId
      SubnetId:
        Ref: AccessSubnet
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  MgmtRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  MgmtNatRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref MgmtRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
  MgmtSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref MgmtSubnet
      RouteTableId: !Ref MgmtRouteTable
  DataSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref DataSubnet
      RouteTableId: !Ref MgmtRouteTable
  AccessSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Enable Access Ingress Ports
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '893'
          ToPort: '893'
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: '500'
          ToPort: '500'
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: '4500'
          ToPort: '4500'
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: '4789'
          ToPort: '4789'
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: '5770'
          ToPort: '5770'
          CidrIp: 0.0.0.0/0
        - IpProtocol: '47'
          CidrIp: 0.0.0.0/0
        - IpProtocol: '50'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - Access-SG
  MgmtSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Enable Management Ingress Ports
      SecurityGroupIngress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - Management-SG
Outputs:
  VPCId:
    Description: VPCId of the newly created VPC
    Value: !Ref VPC
  ProxyAccessEniId:
    Description: EC2 Network Interface Id to be used to attach the proxy Access Interface to
    Value: !Ref ProxyAccessEni
  ProxyMgmtEniId:
    Description: EC2 Network Interface Id to be used to attach the proxy Mgmt Interface to
    Value: !Ref ProxyMgmtEni
  VsdMgmtEniId:
    Description: EC2 Network Interface Id to be used to attach the proxy Mgmt Interface to
    Value: !Ref VsdMgmtEni
  ProxyMgmtEniIp:
    Description: IP address that will be associated with the proxy Mgmt Interface
    Value: !GetAtt
      - ProxyMgmtEni
      - PrimaryPrivateIpAddress
