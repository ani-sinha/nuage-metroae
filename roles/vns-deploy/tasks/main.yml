---
- name: Clean known_hosts of VSC's on {{ target_server }}
  commad: ssh-keygen -R "{{ interfaces.mgmt.ip }}" -f /root/.ssh/known_hosts
  delegate_to: "{{ target_server }}"
  remote_user: root 

- name: Change XMPP connection to TLS on VSD
  command: /opt/vsd/bin/ejmode allow -y
  remote_user: root
  delegate_to: "{{ vsd_fqdn }}"
 
- name: Install pip on VSD
  easy_install:
    name: pip
    state: latest
  remote_user: root
  delegate_to: "{{ vsd_fqdn }}"
 
- name: Install pexpect on VSD
  pip:
    name: pexpect
  remote_user: root
  delegate_to: "{{ vsd_fqdn }}"

- name: Create and transfer certs from VSD to {{ inventory_hostname }}
  expect:
   timeout: 55
   command: "{{ create_certs }}"
   responses:
     (?i)password: "admin"
  delegate_to: "{{ vsd_fqdn }}"
  remote_user: root
  
- name: Create tls-profile on {{ inventory_hostname }}
  sros_config:
    lines:
      - configure system security tls-profile vns-tls-profile own-key "cf1:\{{ xmpp.username }}-Key.pem"
      - configure system security tls-profile vns-tls-profile own-certificate "cf1:\{{ xmpp.username }}.pem"
      - configure system security tls-profile vns-tls-profile ca-certificate "cf1:\{{ xmpp.username }}-CA.pem"
      - configure system security tls-profile vns-tls-profile no shutdown
      - configure vswitch-controller open-flow tls-profile vns-tls-profile
      - configure vswitch-controller xmpp tls-profile vns-tls-profile
    provider: "{{ creds }}"
    save: yes
  delegate_to: "{{ target_server }}"
  remote_user: root
  vars:
    creds:
      host: "{{ interfaces.mgmt.ip }}"
      username: admin
      password: admin
      transport: cli

