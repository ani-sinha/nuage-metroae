---

- block:

  - block:
    - name: Force DHCP update to configure DNS in AWS (ignoring errors)
      command: dhclient
      ignore_errors: true

    - name: Set hostname for AWS for current session
      command: "hostname {{ hostname }}"

    - name: Set hostname for AWS permanently
      shell: "echo {{ hostname }} > /etc/hostname"

    when: target_server_type | match("aws")

  - name: Read the VSD version
    shell: echo $VSD_VERSION
    register: vsd_full_version
    remote_user: "{{ vsd_default_username }}"
    become: no

  - debug: var=vsd_full_version.stdout verbosity=1

  - name: Set Major, Minor and Patch VSD version
    set_fact:
        vsd_major_version: "{{ vsd_full_version.stdout.split('.')[0] }}"
        vsd_minor_version: "{{ vsd_full_version.stdout.split('.')[1] }}"
        vsd_patch_version: "{{ vsd_full_version.stdout.split('.')[2].split('U')[0] }}"

  - debug: var=vsd_full_version.stdout verbosity=1

  - debug: var=vsd_major_version verbosity=1

  - debug: var=vsd_minor_version verbosity=1

  - debug: var=vsd_patch_version verbosity=1

  - name: Set deploy_vcin to false (deploy vsd)
    set_fact:
      deploy_vcin: false

  - name: Overwrite deploy_vcin to true (deploy vcin)
    set_fact:
      deploy_vcin: true
    when:
      - vcin_mode is defined
      - vcin_mode
      - (vsd_major_version|int > 5) or
        (vsd_major_version|int >= 5 and vsd_minor_version|int > 2) or
        (vsd_major_version|int >= 5 and vsd_minor_version|int >= 2 and vsd_patch_version|int >= 2)

  - name: Assert that vcin_mode is not true if version less than 5.2.2
    assert:
      that: deploy_vcin or not (vcin_mode|default(False))
      msg:  "MetroAE does not support the installation of VCIN for versions less than 5.2.2. Quitting"

  - block:

    - name: Set VSD numbering for install
      set_fact:
          first_cluster_node_to_install: "{{ groups['vsds'][0] }}"
          second_cluster_node_to_install: "{{ groups['vsds'][1] }}"
          third_cluster_node_to_install: "{{ groups['vsds'][2] }}"
      when: not nuage_upgrade | default(False)

    - name: Set VSD numbering for upgrade
      set_fact:
          first_cluster_node_to_install: "{{ groups['vsds'][1] }}"
          second_cluster_node_to_install: "{{ groups['vsds'][2] }}"
          third_cluster_node_to_install: "{{ groups['vsds'][0] }}"
      when: nuage_upgrade | default(False)

    - block:

      - name: Generate SSH keys for nodes 2 and 3, install case
        user:
          name: "vsd"
          generate_ssh_key: yes
        register: ssh_key_list
        delegate_to: "{{ item }}"
        with_items:
          - "{{ second_cluster_node_to_install }}"
          - "{{ third_cluster_node_to_install }}"

      - debug: var=ssh_key_list

      - name: Add SSH keys to authorized_keys file on this node
        authorized_key:
            key: "{{ item.ssh_public_key }}"
            user: "vsd"
        with_items:
          - "{{ ssh_key_list }}"

      - name: Change owner and permissions of VSD authorized keys file on node 1
        file:
          path: /home/vsd/.ssh/authorized_keys
          owner: vsd
          group: hadoopusers
          mode: 0640

      when:
        - inventory_hostname == first_cluster_node_to_install
        - not nuage_upgrade | default(False)

    - block:

      - name: Generate SSH keys for the second node, upgrade case
        user:
          name: "vsd"
          generate_ssh_key: yes
        register: ssh_key
        delegate_to: "{{ second_cluster_node_to_install }}"

      - debug: var=ssh_key

      - name: Add SSH keys to authorized_keys file on this node
        authorized_key:
            key: "{{ ssh_key.ssh_public_key }}"
            user: "vsd"

      - name: Change owner and permissions of VSD authorized keys file
        file:
          path: /home/vsd/.ssh/authorized_keys
          owner: vsd
          group: hadoopusers
          mode: 0640

      when:
        - inventory_hostname == first_cluster_node_to_install
        - nuage_upgrade | default(False)

    - block:

      - name: Generate SSH key for this node
        user:
          name: "vsd"
          generate_ssh_key: yes
        register: ssh_key

      - name: Add this node's SSH key to authorized_keys file on first node
        authorized_key:
            key: "{{ ssh_key.ssh_public_key }}"
            user: "vsd"
        delegate_to: "{{ first_cluster_node_to_install }}"

      - name: Change owner and permissions of VSD authorized keys file
        file:
          path: /home/vsd/.ssh/authorized_keys
          owner: vsd
          group: hadoopusers
          mode: 0640
        delegate_to: "{{ first_cluster_node_to_install }}"

      when:
        - inventory_hostname == third_cluster_node_to_install
        - nuage_upgrade | default(False)

    when: vsd_sa_or_ha | match('ha')

  - block:

    - name: Generate SSH key on master VCIN
      user:
        name: "{{ vsd_default_username }}"
        generate_ssh_key: yes
      register: master_vcin_ssh_key
      delegate_to: "{{ master_vcin }}"

    - name: Generate SSH key on slave VCIN
      user:
        name: "{{ vsd_default_username }}"
        generate_ssh_key: yes
      register: slave_vcin_ssh_key

    - name: Add master VCIN SSH key to slave VCIN
      authorized_key:
          key: "{{ master_vcin_ssh_key.ssh_public_key }}"
          user: "{{ vsd_default_username }}"

    - name: Add slave VCIN SSH key to master VCIN
      authorized_key:
          key: "{{ slave_vcin_ssh_key.ssh_public_key }}"
          user: "{{ vsd_default_username }}"
      delegate_to: "{{ master_vcin }}"

    when: master_vcin is defined

  - name: Configure yum proxy
    lineinfile:
      dest: /etc/yum.conf
      regexp: "^proxy="
      line: "proxy={{ yum_proxy }}"
    when: not yum_proxy | match('NONE')

  - name: Execute a yum update
    yum:
      name: '*'
      state: latest
    when: yum_update

  - name: Disable cloud-init on VSD, to avoid boot time delays
    command: "{{ item }}"
    with_items:
      - systemctl disable cloud-init
      - systemctl disable cloud-init-local
      - systemctl disable cloud-config
      - systemctl disable cloud-final

  remote_user: "{{ vsd_default_username }}"

- name: Configure ntpd and ntpdate and local time zone
  include_role:
    name: common
    tasks_from: linux-ntp-sync
  vars:
    rem_user: "{{ vsd_default_username }}"

- block:

  - block:

    - name: Install VSD software on standalone node
      command: /opt/vsd/vsd-install.sh -t s -y
      when: not deploy_vcin

    - name: Install VCIN software on VCIN node
      command: /opt/vsd/vsd-install.sh -t v -y
      when: deploy_vcin

    when:
      - vsd_sa_or_ha | match ('sa')
      - master_vcin is not defined

  - block:

    - name: Preparing the master
      delegate_to: "{{ master_vcin }}"
      command: /opt/vsd/bin/vsd-prepare-replication-master-cluster.sh

    - name: Preparing replication on the master
      delegate_to: "{{ master_vcin }}"
      command: "/opt/vsd/bin/vsd-prepare-replication-master.sh -a {{ inventory_hostname }}"

    - name: Creating the data folder on the slave
      file:
        path: /opt/vsd/data/
        state: directory

    - name: Syncing the backup from the master to the local system
      delegate_to: "{{ master_vcin }}"
      synchronize:
          dest: /opt/vsd/data/
          src: /tmp/backup/
          mode: push

    - name: Install VCIN software on slave VCIN node
      command: /opt/vsd/vsd-install.sh -t v -y

    - name: Start the replication
      command: "/opt/vsd/bin/vsd-start-replication-slave -m {{ master_vcin }}"

    when:
      - vsd_sa_or_ha | match ('sa')
      - deploy_vcin
      - master_vcin is defined

  - block:

    - name: Install VSD software on the first cluster node
      command: "/opt/vsd/vsd-install.sh -t 1 -a {{ first_cluster_node_to_install }} -b {{ second_cluster_node_to_install }} -c {{third_cluster_node_to_install}} -x {{vsd_fqdn}} -y"
      when: inventory_hostname == first_cluster_node_to_install

    - name: Install VSD software on the second cluster node
      command: "/opt/vsd/vsd-install.sh -1 {{ first_cluster_node_to_install }} -t 2 -x {{ vsd_fqdn }} -y"
      when: inventory_hostname == third_cluster_node_to_install

    - name: Install VSD software on the third cluster node
      command: "/opt/vsd/vsd-install.sh -1 {{ first_cluster_node_to_install }} -t 3 -x {{ vsd_fqdn }} -y"
      when: inventory_hostname == third_cluster_node_to_install

    when: vsd_sa_or_ha | match('ha')

  - name: Set XMPP connection to allow both clear and TLS
    command: /opt/vsd/bin/ejmode allow -y
    when: not deploy_vcin

  remote_user: "{{ vsd_default_username }}"
