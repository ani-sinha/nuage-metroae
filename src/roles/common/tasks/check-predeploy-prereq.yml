- block:

  - name: Check SSH Connectivity to target server (ignoring errors)
    include_role:
      name: common
      tasks_from: wait-for-ssh
    vars:
      ssh_host: "{{ target_server }}"
      host_username: "{{ target_server_username }}"
      retries: 5
      delay: 5
    ignore_errors: True

  - name: Check output of SSH test
    assert:
      that: "not {{ wait_for_ssh_output.failed }}"
      msg: "Failed to connect to target_server {{ target_server }}. Is passwordless SSH set up?"

  when: target_server_type | default('NONE') is match("kvm")

- block:

  - block:

    - name: Check that image files were found
      assert:
        that: "image_path | default('MISSING') != 'MISSING' and image_file_name | default('MISSING') != 'MISSING'"
        msg: "Missing image files for {{ hostname | default(vmname) }} under the unzipped file directory, please unzip them."
      when: target_server_type is match("kvm") or target_server_type is match("vcenter")

    when: component_type | default("NONE") != 'vrs'

  - block:

    - name: Check that VRS package files were found
      assert:
        that: "vrs_package_path | default('MISSING') != 'MISSING'"
        msg: "Missing VRS package files under the unzipped file directory, please unzip them."

    - name: Check that DKMS files were found
      assert:
        that: "dkms_package_path | default('MISSING') != 'MISSING'"
        msg: "Missing VRS DKMS files under the unzipped file directory, please unzip it."
      when: dkms_install

    when: component_type | default("NONE") == 'vrs'

  when: not vsd_inplace_upgrade | default(false)

- block:

  - name: Check available disk space on hypervisor
    include_role:
      name: common
      tasks_from: check-hypervisor-disk-space
    vars:
      required_available_space: "{{ required_available_disk_space | default(0) }}"
      path: "{{ disk_space_path | default('NONE') }}"

  delegate_to: "{{ target_server }}"
  when: target_server_type | default('NONE') is match("kvm")

- block:

  - name: Get info on datastore
    connection: local
    vmware_datastore_info:
      hostname: "{{ target_server }}"
      username: "{{ vcenter.username }}"
      password: "{{ vcenter.password }}"
      validate_certs: no
      cluster: "{{ vcenter.cluster }}"
      datacenter: "{{ vcenter.datacenter }}"
    register: datastore_facts

  - debug: var=datastore_facts verbosity=1

  - debug: var=datastore_facts['datastores'].freeSpace

  - name: Set fact for datastore free space
    set_fact:
      datastore_free_space: "{{ datastore_facts['datastores'][freeSpace] }}"
#  - name: Set VM UUID
#    set_fact:
#      uuid: "{{ vm_facts.instance.hw_product_uuid }}"

#  - debug: var=uuid
