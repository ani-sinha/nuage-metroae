- name: Clean known_hosts of VSD's (ignoring errors)
  known_hosts:
    name: "{{ hostname }}"
    state: absent
  delegate_to: localhost
  no_log: True
  ignore_errors: True

- name: Wait for Webfilter ssh to be ready
  include_role:
    name: common
    tasks_from: wait-for-ssh
  vars:
    ssh_host: "{{ hostname }}"
    host_username: "{{ vsd_default_username }}"

- block:

  - name: Create Webfilter SSL certs
    include_role:
      name: common
      tasks_from: vsd-generate-transfer-certificates
    vars:
      certificate_password: "{{ webfilter_default_password }}"
      certificate_username: "webfilter"
      commonName: "webfilter"
      certificate_type: server
      file_type: jks
      additional_parameters: "-p {{ webfilter_default_password }} -d {{ inventory_hostname }}"

- block:

  - block:

    - name: Get the webfilter jks
      fetch:
        src: "/opt/vsd/ejbca/p12/webfilter.jks"
        dest: "/tmp/webfilter/"
        flat: yes

    - name: Get the truststore jks
      fetch:
        src: "/opt/vsd/ejbca/p12/truststore.jks"
        dest: "/tmp/webfilter/"
        flat: yes

    delegate_to: "{{ vsd_hostname_list[0] }}"

  - name: Copy to webfilter manager
    copy:
      dest: "/opt/vsd/webfilter/conf/"
      src: "/tmp/webfilter/"

  - name: Delete the temporary directory
    file:
      path: /tmp/webfilter
      state: absent

  - name: "Ensure application properties contains webfilter"
    lineinfile:
      name: /opt/vsd/webfilter/conf/application.properties
      line: "server.ssl.key-store=/opt/vsd/webfilter/conf/webfilter.jks"
      state: present
    check_mode: yes
    register: conf
    failed_when: (conf is changed) or (conf is failed)

  - name: "Ensure application properties contains truststore"
    lineinfile:
      name: /opt/vsd/webfilter/conf/application.properties
      line: "server.ssl.trust-store=/opt/vsd/webfilter/conf/truststore.jks"
      state: present
    check_mode: yes
    register: conf
    failed_when: (conf is changed) or (conf is failed)

  - name: Stop webfilter process
    command: monit stop webfilter
    ignore_errors: yes
    register: stop_stats_output

  - name: Check if an error should be ignored
    assert:
      that: "not stop_stats_output.failed or stop_stats_output.stderr is search('not found')"
      msg: "Error while attempting to stop webfilter services"

  - name: Pause for processes to exit
    pause:
      seconds: 20

  - name: Start webfilter process
    command: monit start webfilter

  - name: Get monit summary for webfilter processes
    vsd_monit:
      group: all
    register: webfilter_proc

  - name: Wait for webfilter processes to become running
    monit_waitfor_service:
      name: "{{ webfilter_proc['state'].keys() }}"
      timeout_seconds: 600
      test_interval_seconds: 10

  - name: Start webfilter-status process
    command: monit start webfilter-status

  - name: Wait for webfilter processes to become running
    monit_waitfor_service:
      name: "{{ webfilter_proc['state'].keys() }}"
      timeout_seconds: 600
      test_interval_seconds: 10

  - name: /opt/vsd/webfilter/scripts/incompassOperations.sh -a all -p /opt/vsd/webfilter/seed_34
          /opt/vsd/webfilter/scripts/incompassOperations.sh -a all
    command: ls

  - name: Execute the monit summary command again to ensure the services are still operational after
          the database download and update.
    command: ls

  - name: Connect with the NSG
    command: ls

  remote_user: "{{ webfilter_default_username }}"
