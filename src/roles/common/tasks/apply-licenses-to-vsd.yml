- name: Set Node for VSD license application
  set_fact:
    node_for_license_install: "{{ (vsd_sa_or_ha is match('ha')) | ternary(third_cluster_node_to_install, inventory_hostname) }}"

- name: Format VSPK auth for VSPK module
  set_fact:
    vspk_auth:
      api_username: "{{ vsd_auth.username }}"
      api_password: "{{ vsd_auth.password }}"
      api_enterprise: "{{ vsd_auth.enterprise }}"
      api_url: "{{ vsd_auth.api_url }}"
      api_version: v5_0
  no_log: True

- block:

  - name: Adding basic license
    connection: local
    nuage_vspk:
      auth: "{{ vspk_auth }}"
      state: present
      type: License
      properties:
        license: "{{ lookup('file', vsd_license_file) }}"
    ignore_errors: yes
    no_log: true
    register: vsd_license_output

  - name: Print basic license application output for debugging
    debug: var=vsd_license_output verbosity=1

  - name: Assert that failure was due to license already present
    assert:
      that: "vsd_license_output.failed == false or vsd_license_output.msg is search('The license already exists in the system')"
      msg: "Failure in adding basic license to VSD"

  when: vsd_license_file is defined and inventory_hostname == node_for_license_install

- block:

  - name: Adding cluster license
    connection: local
    nuage_vspk:
      auth: "{{ vspk_auth }}"
      type: License
      state: present
      properties:
        license: "{{ lookup('file', vsd_cluster_license_file) }}"
    ignore_errors: yes
    no_log: true
    register: vsd_cluster_license_output

  - name: Print cluster license application output for debugging
    debug: var=vsd_cluster_license_output verbosity=1

  - name: Assert that failure was due to license already present
    assert:
      that: "vsd_cluster_license_output.failed == false or vsd_cluster_license_output.msg is search('The license already exists in the system')"
      msg: "Failure in adding basic license to VSD"

  when:
    - vsd_cluster_license_file is defined
    - inventory_hostname == node_for_license_install
    - vsd_sa_or_ha is match('ha')
