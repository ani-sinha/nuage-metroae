---
- name: Pull facts on target_server {{ target_server }}
  action: setup
  delegate_to: "{{ target_server }}"

- name: Check target for supported OS
  fail: msg="Unsupported OS family ({{ ansible_os_family }})"
  when: ansible_os_family not in nsgv_target_server_os_family_list

- name: Check target memory
  fail: msg="Not enough memory ({{ ansible_memtotal_mb }})"
  when: ansible_memtotal_mb < {{ nsgv_target_server_memory_mb_min }}

- name: Check target cores
  fail: msg="Not enough cores ({{ ansible_processor_vcpus }})"
  when: ansible_processor_vcpus < {{ nsgv_target_server_vcpus_min }}

- name: Check target bridges
  fail: msg="Required network bridges not found"
  when: ("{{ mgmt_bridge }}" not in ansible_interfaces) or
        ("{{ data_bridge }}" not in ansible_interfaces) or
        ("{{ access_bridge }}" not in ansible_interfaces) 
        
- name: Install packages for RedHat OS family distros
  remote_user: root
  delegate_to: "{{ target_server }}"
  yum: name={{ item }} state=present
  with_items:
   - qemu-kvm
   - libvirt
   - bridge-utils
   - libguestfs-tools
   - libvirt-python
  when: ansible_os_family == "RedHat"

- name: Install packages for Debian OS family distros
  remote_user: root
  delegate_to: "{{ target_server }}"
  apt: name={{ item }} state=present
  with_items:
   - qemu-kvm
   - libvirt-bin
   - bridge-utils
   - libguestfs-tools
   - python-libvirt
  when: ansible_os_family == "Debian"
