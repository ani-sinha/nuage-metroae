---
- block:

  - name: Set VSC KVM image location
    include_role:
      name: common
      tasks_from: find-image.yml
    vars:
      pattern: vsc_singledisk.qcow2
    when: vscs | map(attribute='target_server_type') | list is issuperset(["kvm"])

  - name: Set VSC vCenter image location
    include_role:
      name: common
      tasks_from: find-image.yml
    vars:
      pattern: vsc_singledisk.ova
    when: vscs | map(attribute='target_server_type') | list is issuperset(["vcenter"])

  - name: Find VSC single_disk image directory
    find:
      path: "{{ nuage_unzipped_files_dir }}"
      pattern: single_disk
      file_type: directory
      recurse: yes
    register: rc_single_disk

  - name: Set single disk directory
    set_fact:
      tim_path: "{% for file in rc_single_disk.files %}{% if 'el7' not in file.path %}{{ file.path }}{% endif %}{% endfor %}"
    when: rc_single_disk.matched > 1

  - name: Set single disk directory
    set_fact:
      tim_path: "{{ rc_single_disk.files[0].path }}"
    when: rc_single_disk.matched == 1

  - name: Set single disk directory
    set_fact:
      tim_path: "{{ nuage_unzipped_files_dir }}"
    when: rc_single_disk.matched < 1

  - name: Find name of VSD Migration ISO File
    include_role:
      name: common
      tasks_from: find-file.yml
    vars:
      dir_name: "{{ tim_path }}"
      pattern: "cpm.tim"

  - name: Register VSC TIM variables with proper path and image locations for use in other playbooks
    set_fact:
      vsc_tim_path: "{{ file_path }}"
      vsc_tim_file_name: "{{ file_name }}"

  - name: Register that cpm.tim file is missing
    set_fact:
      missing_image_file: true
    when: missing_file | default(True)

  - name: Verify VSC management gateway is in correct IP range
    include_role:
      name: common
      tasks_from: check-ip-in-range.yml
    vars:
      ip_address: "{{ item.mgmt_gateway }}"
      netaddr: "{{ item.mgmt_ip }}"
      netmask: "{{ item.mgmt_ip_prefix }}"
    with_items: "{{ vscs }}"
    when: item.internal_mgmt_ip is not defined

  - name: Create host_vars files for vsc
    include_tasks: write-host-files.yml
    vars:
      component_template: vsc
    loop_control:
      loop_var: component
    with_items: "{{ vscs }}"

#  - name: Create host_vars files for vsc
#    template: src=vsc.j2 backup=no dest={{ inventory_dir }}/host_vars/{{ item.1.hostname }}
#    with_indexed_items: "{{ vscs }}"

  - name: Verify VSC DNS entries exist at server {{ dns_server_list[0] }}, and hostnames map to their IPs
    include_tasks: check-dns.yml
    with_items: "{{ vscs }}"
    when: dns_server_list

  when:
    - vscs is defined and vscs
  tags:
    - vsc
