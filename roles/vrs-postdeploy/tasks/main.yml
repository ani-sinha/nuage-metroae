---
- name: Wait for active VSC ssh to be ready
  local_action:
    module: wait_for
    port: "22"
    host: "{{ active_controller_addr }}"
    search_regex: OpenSSH
    delay: 1

- name: Get ovs-vsctl show output
  command: ovs-vsctl show
  register: ovs_show_result
  remote_user: root

- name: Create a temporary directory
  local_action: file path={{ playbook_dir }}/scripts/tmp  state=directory

- name: Copy ovs-vsctl show output to a temporary file
  local_action: copy content={{ ovs_show_result.stdout }} dest={{ playbook_dir }}/scripts/tmp/{{ inventory_hostname }}.tmp

- name: Run verification script for OVS show command
  local_action: command python {{ playbook_dir }}/scripts/ovs_result_verify.py {{ node_ip_addr }} {{ inventory_hostname }}.tmp {{ playbook_dir }}
  register: ovs_show_result

- name: Run verification script for VRS
  local_action: command python {{ playbook_dir }}/scripts/vrs_verify.py {{ node_ip_addr }} {{ active_controller_addr }} {{ standby_controller_addr }} {{ playbook_dir }} "{{ ovs_show_result.stdout }}"
  register: pass

- name: Delete the temporary file
  local_action: file path={{ playbook_dir }}/scripts/tmp/{{ inventory_hostname }}.tmp state=absent

- name: VRS Verification Result Failure Status
  fail: msg={{ pass.stdout }}
  when: pass.stdout | search("(?i)Error")

- name: VRS Verification Result Success Status
  debug: var=pass.stdout

- name: Register pid of docker process
  stat: path=/var/run/docker.pid
  register: docker_pid
  remote_user: root

- name: Check if pid of docker exists
  fail: msg="Docker process is not started. PID not found!"
  when: docker_pid.stat.exists == false
  remote_user: root

- name: Get pid of docker process
  command: head -n 1 /var/run/docker.pid
  register: docker_pid_value
  remote_user: root

- name: Register pid of dockermon process
  stat: path=/var/run/openvswitch/nuage-docker-monitor.pid
  register: dockermon_pid
  remote_user: root

- name: Check if pid of dockermon exists
  fail: msg="Dockermon process is not started. PID not found!"
  when: dockermon_pid.stat.exists == false
  remote_user: root

- name: Get pid of dockermon process
  command: head -n 1 /var/run/openvswitch/nuage-docker-monitor.pid
  register: dockermon_pid_value
  remote_user: root

- name: Get docker status
  command: service docker status
  register: docker_status_result
  remote_user: root

- name: Get dockermon status
  command: service nuage-docker-monitor status
  register: dockermon_status_result
  remote_user: root

- name: Get dockermon process details
  shell: ps -eo lstart,cmd|grep {{ dockermon_pid_value.stdout }}
  register: ps_docker_result
  remote_user: root

- name: Get dockermon logs
  command: tail -n 3 /var/log/openvswitch/nuage-docker-monitor.log
  register: docker_mon_logs
  remote_user: root

- name: Create a temporary copy of the dockermon verification command outputs on ansible host
  template: src=dockermon_results.yml.j2 backup=no dest={{ playbook_dir }}/scripts/tmp/{{ inventory_hostname }}.yml
  delegate_to: 127.0.0.1
  remote_user: root

- name: Run verification script for VRS
  local_action: command python {{ playbook_dir }}/scripts/dockermon_result_verify.py {{ inventory_hostname }}.yml {{ playbook_dir }}
  register: pass

- name: Verification Result Failure Status
  fail: msg={{ pass.stdout }}
  when: pass.stdout | search("(?i)Error")

- name: Verification Result Success Status
  debug: var=pass.stdout

- name: Delete the temporary directory
  local_action: file path={{ playbook_dir }}/scripts/tmp state=absent
