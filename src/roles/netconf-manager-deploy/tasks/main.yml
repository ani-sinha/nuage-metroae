- block:

  - name: Format VSPK auth for VSPK module
    set_fact:
      vspk_auth:
        api_username: "{{ vsd_auth.username }}"
        api_password: "{{ vsd_auth.password }}"
        api_enterprise: "{{ vsd_auth.enterprise }}"
        api_url: "{{ vsd_auth.api_url }}"
        api_version: v5_0
    no_log: "{{ lookup('env', 'METROAE_NO_LOG') or 'true' }}"

  - name: Create a netconf user on the VSD
    connection: local
    nuage_vspk:
      auth: "{{ vspk_auth }}"
      type: User
      state: present
      match_filter: "userName == 'netconfmgr'"
      properties:
        email: "user@example.met"
        first_name: "Netconfmgr"
        last_name: "Netconfmgr"
        password: "password"
        user_name: "netconfmgr"
    register: netconf_user

  - name: Get Enterprise from VSD
    connection: local
    nuage_vspk:
      auth: "{{ vspk_auth }}"
      type: Enterprise
      command: find
      properties:
        name: "csp"
    register: nuage_enterprise

  - name: Find Administrators group in Enterprise
    connection: local
    nuage_vspk:
      auth: "{{ vspk_auth }}"
      type: Group
      parent_id: "{{ nuage_enterprise.id }}"
      parent_type: Enterprise
      command: find
      properties:
        name: "Netconf Manager Group"
    register: nuage_group

  - name: Assign netconf user to group
    connection: local
    nuage_vspk:
      auth: "{{ vspk_auth }}"
      type: User
      id: "{{ netconf_user.id }}"
      parent_id: "{{ nuage_group.id }}"
      parent_type: Group
      state: present

  - name: Add permission to the netconf user
    connection: local
    nuage_vspk:
      auth: "{{ vspk_auth }}"
      type: Group
      parent_id: "{{ netconf_user.id }}"
      parent_type: User
      state: present
      properties:
        role: "NETCONFMGR"

  - name: Generate keys on VSD for Netconf
    command: /opt/vsd/ejbca/deploy/certMgmt.sh -a generate -c {{ netconf_username }}  -u {{ netconf_username }} -o csp -f jks -t client -p {{ netconf_password }}

  remote_user: "{{ vsd_custom_username | default(vsd_default_username) }}"
  become: "{{ 'no' if vsd_custom_username | default(vsd_default_username) == 'root' else 'yes' }}"
  vars:
    ansible_become_pass: "{{ vsd_custom_password | default(vsd_default_password) }}"

- block:

  - name: Install Java SDK
    yum: 
      name: java-1.8.0-openjdk
      state: present

  - name: Ensure 4 CPU, 6 GB of memory and 20G of HD

  - name: Set VSC VM QCOW2 location
    include_role:
      name: common
      tasks_from: find-file.yml
    vars:
      dir_name: "{{ nuage_unzipped_files_dir }}"
      pattern: "nuage-netconf-*.rpm"

  - name: Register VSC QCOW2 variables with proper path and image locations for use in other playbooks
    set_fact:
      image_path: "{{ file_path }}"
      image_file_name: "{{ file_name }}"

  - name: Copy the NETCONF Manager RPM file on the NETCONF Manager VM
    copy:
      dest: "/tmp/netconfmanager/{{ image_file_name }}"
      src: "{{ image_path }}/{{ image_file_name }}"
      mode: 0644
      owner: "root"
      group: "root"

  - name: yum -y localinstall nuage-netconf-manager-<number>.el7.x86_64.rpm
    yum:
      name: "{{ image_path }}/{{ image_file_name }}"
      state: present

  - block:

    - name: Get the VSD truststore
      fetch:
        src: "/opt/vsd/jboss/standalone/configuration/vsd.truststore"
        dest: "/tmp/netconfmanager/"
        flat: yes

    - name: Get the Netconfmanager jks
      fetch:
        src: "/opt/vsd/ejbca/p12/netconfmgr.jks"
        dest: "/tmp/netconfmanager/"
        flat: yes
    delegate_to: vsds

  - name: Copy to netconf manager
    copy:
      dest: "/opt/netconfmanager/conf/"
      src: "/tmp/netconfmanager/"

  delegate_to: vsd1.example.met

  - name: Configure backend port numbers Port 61616 to be used for JMS messages. Port 7443 to be used for REST calls.

  - name: Configure front end port numbers 51515 MUST match `jms.port= in /opt/netconfmanager/conf/netconfmanager.properties 5666 MUST match `vsd.port in /opt/netconfmanager/conf/netconfmanager.properties

  - name: In /opt/netconfmanager/conf/netconfmanager.properties, edit the three parameters of the JMS Listener jms.queue jms.topic jms.user

  - name: Enable and start Docker
    service:
      name: netconfmanager
      state: started
      enabled: yes

  - name: Check the newly created Netconf Managers discovered in VSD, by opening the Open Monitoring Console window in VSD

  remote_user: root
