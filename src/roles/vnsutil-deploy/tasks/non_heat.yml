---
- name: Wait for VNS Utility VM ssh to be ready
  include_role:
    name: common
    tasks_from: wait-for-ssh
  vars:
    ssh_host: "{{ mgmt_ip }}"
    host_username: "{{ vnsutil_default_username }}"

- block:

  - name: Configure yum proxy
    lineinfile:
      dest: /etc/yum.conf
      regexp: "^proxy="
      line: "proxy={{ yum_proxy }}"
    when: not yum_proxy | match('NONE')

  - name: Install NTP package on the vnsutil vm
    yum: name=ntp state=present

  remote_user: "{{ vnsutil_default_username }}"

- name: Configure ntpd and ntpdate and local time zone
  include_role:
    name: common
    tasks_from: linux-ntp-sync
  vars:
    rem_user: "{{ vnsutil_default_username }}"

- block:

  - name: Gather all NSGvs
    set_fact:
      all_nsgvs: "{% for nsgv_name in groups['nsgvs'] %}{{ nsgv_objs.append(hostvars[nsgv_name]) }}{% endfor %}{{ nsgv_objs }}"
    vars:
      nsgv_objs: []
    no_log: true

  - name: Filter NSGvs that have IP addresses
    set_fact:
      dhcpd_nsgvs: "{{ all_nsgvs | selectattr('nsgv_ip', 'defined') | list }}"
    no_log: true

  when: '"nsgvs" in groups'

- block:

  - name: Install dhcp package
    yum: name=dhcp state=present

  - name: Write dhcp config
    template: src=dhcpd.conf.j2 backup=no dest=/etc/dhcp/dhcpd.conf

  - name: Restart dhcp service
    service:
      name: dhcpd
      state: restarted

  - name: Chkconfig of dhcpd
    command: chkconfig dhcpd on

  - name: Install dnsmasq package
    yum: name=dnsmasq state=present

  - name: Copy dnsmasq config
    template: src=dnsmasq.conf.j2 backup=no dest=/etc/dnsmasq.conf

  - name: Start dnsmasq
    service:
      name: dnsmasq
      state: started

  - name: Chkconfig of dnsmasq
    command: chkconfig dnsmasq on

  remote_user: "{{ vnsutil_default_username }}"
  when: dhcpd_nsgvs is defined and dhcpd_nsgvs | length > 0
