---
# TODO:
# Check for existing stack or vms
- name: Creating VSD stack
  register: create_stack
  os_stack:
    name: "{{ inventory_hostname }}"
    template: "roles/vsd-os-deploy/templates/vsd.yml" 
    auth:
      "{{ os_auth }}"
    parameters:
      vm_name: "{{inventory_hostname}}"
      vsd_image: "{{ vsd_image }}"
      vsd_flavor: "{{ vsd_flavor }}"
      vsd_net: "{{ vsd_network }}"
      ssh_key: "{{ansible_user_ssh_key}}"
  delegate_to: 127.0.0.1
- debug: var=create_stack['stack']['outputs'][0]['output_value']

- name: Set the VSD mgmt ip
  set_fact:
    vsd_mgmt_ip: "{{ create_stack['stack']['outputs'][0]['output_value'] }}"

- name: Get DNS and NTP server details from OS server facts
  os_server_facts:
    auth:
      "{{ os_auth }}"
    server: "{{ infra_server_name }}*"
  register: infra_server
  delegate_to: 127.0.0.1

- name: Set DNS/NTP server ip
  set_fact:
    infra_ip: "{{ infra_server['ansible_facts']['openstack_servers'][0]['private_v4'] }}"

- name: Update /etc/hosts file on ansible host
  local_action:
    module: lineinfile
    dest: /etc/hosts
    line: "{{ vsd_mgmt_ip }}    {{ inventory_hostname }}"

- name: Wait for VSD-HA ssh to be ready
  local_action:
    module: wait_for
    port: "22"
    host: "{{ vsd_mgmt_ip }}"
    search_regex: OpenSSH
    delay: 1

- name: Pause for ssh port to be active on {{ inventory_hostname }}
  pause: 
    seconds: 5

- name: Update hostname
  template: src=network.j2 backup=no dest=/etc/sysconfig/network

- name: Add a DNS server to eth0
  lineinfile:
    dest: /etc/sysconfig/network-scripts/ifcfg-eth0
    line: "DNS1={{ infra_ip }}"

- name: Restart networking on {{ inventory_hostname }}
  command: /etc/init.d/network restart
  remote_user: root

- name: Resolve fqdn 
  command: hostname "{{ inventory_hostname }}"
  remote_user: root

- name: Update DNS entires
  shell: echo "{{ vsd_mgmt_ip }}"  "{{ inventory_hostname }}" >> /etc/vsp_hosts
  delegate_to: "{{ infra_ip }}"
  remote_user: centos
  become: true

- name: Restart DNS service
  shell: service dnsmasq restart
  delegate_to: "{{ infra_ip }}"
  remote_user: centos
  become: true
