---
# - name: Resolve hostname from first DNS server
#   set_fact:
#     resolved_ip: "{{ lookup('dig', hostname, '@{{dns_server_list[0]}}', 'qtype=A') }}"

# - name: Check DNS response
#   assert:
#     that: resolved_ip | ipaddr
#     msg: "{{ hostname }} cannot be resolved"

# - name: Check if resolved IP is equal to management IP
#   assert:
#     that: resolved_ip == mgmt_ip
#     msg: "Resolved {{ resolved_ip }} address is not equal to management IP {{ mgmt_ip }} for {{ hostname}}"

- name: Ping hostname
  command: ping -c 1 {{ hostname }}
  ignore_errors: yes
  register: host_ping_result
  delegate_to: localhost

- name: Ping IP address
  command: ping -c 1 {{ mgmt_ip }}
  ignore_errors: yes
  register: mgmt_ip_ping_result
  delegate_to: localhost

- name: Assert no response to ping of hostname
  assert:
    that: "host_ping_result.rc != 0 or mgmt_ip_ping_result.rc == 0"
    msg:  "Someone responded to ping of hostname: {{ hostname }} Quitting."

- block:
  - name: Assert no response to ping of IP address
    assert:
      that: "host_ping_result.rc == 0 or mgmt_ip_ping_result.rc != 0"
      msg:  "Someone responded to ping of IP address: {{ mgmt_ip }}. Quitting."
  when: not target_server_type | match("heat") or not dhcp

- name: Set fact for node reachability
  set_fact:
    node_reachable: "{{ host_ping_result.rc == 0 }}"
