---
- name: Set local variable with vmname
  set_fact:
    vm_name: "{{ vmname }}"

- block:

  - name: Create report folder on ansible deployment host
    file:
      path: "/tmp/{{ vm_name }}"
      state: directory
    run_once: true

  - name: Setup VSC temporary configuration files
    template: src=config.cfg.j2 backup=no dest=/tmp/{{ vm_name }}/new-config.cfg

  - name: Copy VSC config file to the VSC
    connection: local
    command: "sshpass -p {{ vsc_password|default('admin') }} scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null /tmp/{{ vm_name }}/new-config.cfg {{ vsc_username|default('admin') }}@{{ mgmt_ip }}:"

  - name: Execute VSC basic configuration
    sros_command:
      commands:
        - exec cf1:\new-config.cfg
        - admin save
      provider: "{{ vsc_creds }}"

  - name: Reboot VSC VM (ignoring errors)
    sros_command:
      commands:
        - admin reboot now
      provider: "{{ vsc_creds }}"
    ignore_errors: true

  - name: Register uptime after reboot
    sros_command:
      commands:
        - show uptime
      provider: "{{ vsc_creds }}"
    register: uptime_after_reboot

  - name: Verify reboot happened successfully
    assert:
      that: "uptime_after_reboot < uptime_before_reboot"
      fail_msg: "System uptime after reboot step suggests there were issues during reboot. Check log for errors."

  - name: Remove temporary configuration files
    file: path=/tmp/{{ vm_name }}/new-config.cfg state=absent

  - name: Create report folder on ansible deployment host
    file:
      path: "/tmp/{{ vm_name }}"
      state: absent
    run_once: true

  delegate_to: "localhost"
