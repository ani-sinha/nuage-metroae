---
- include: heat.yml
  when: target_server_type | match("heat")
  tags:
    - vsc
    - heat
    - vsc-deploy
    
- block:
  - name: set secure communication flag 
    set_fact: 
      secure_communication: "{{ secure_communication }}"
  
  - name: Change XMPP connection to TLS on VSD
    command: /opt/vsd/bin/ejmode allow -y
    delegate_to: "{{ item }}"
    with_items: "{{ groups['vsds'] }}"

  - name: wait for ejabberd-status to become running
    monit_waitfor_service:
      name: "ejabberd-status"
      timeout_seconds: 600
      test_interval_seconds: 30
    delegate_to: "{{ item }}"
    with_items: "{{ groups['vsds'] }}"

  - name: wait for ejbca-status to become running
    monit_waitfor_service:
      name: "ejbca-status"
      timeout_seconds: 600
      test_interval_seconds: 30
    delegate_to: "{{ item }}"
    with_items: "{{ groups['vsds'] }}"
    remote_user: "{{ vsd_username }}"

- block:

  - name: Create and transfer certs
    include_role: 
      name: common
      tasks_from: vsd-generate-transfer-certificates
    vars: 
      certificate_password: "{{ vsc_password }}"
      certificate_username: "{{ xmpp.username }}"
      commonName: "{{ xmpp.username }}" 
      certificate_type: server
      scp_user: "{{ vsc_username }}"
      scp_location: /
      additional_parameters:  -d {{ inventory_hostname }}
    
  - name: Configure VSC for secure communication
    sros_config:
      lines:
          - configure system security tls-profile vsc-tls-profile no shutdown
          - configure vswitch-controller open-flow tls-profile vsc-tls-profile
          - configure vswitch-controller xmpp tls-profile vsc-tls-profile
          - configure system time ntp ntp-server
          - admin save
      provider: "{{ vsc_creds }}"
    delegate_to: localhost

  - name: check xmpp connectivity between VSC and VSD after enabling TLS
    sros_command:
      commands:
        - show vswitch-controller xmpp-server | match Functional
      provider: "{{ vsc_creds }}"
    register: xmpp_status
    until: xmpp_status.stdout[0].find('Functional') != -1
    retries: 6
    delay: 10
    delegate_to: localhost
    
  - name: Print output of 'show vswitch-controller xmpp-server' when verbosity >= 1
    debug: var=xmpp_status verbosity=1
  when: secure_communication
  