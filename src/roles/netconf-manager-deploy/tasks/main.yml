- block:

  - name: Creates temporary netconf directory
    file:
      path: /tmp/netconfmanager
      state: directory

  - name: Copy the NETCONF Manager RPM file on the NETCONF Manager VM
    copy:
      dest: "/tmp/netconfmanager/{{ rpm_file_name }}"
      src: "{{ rpm_path }}/{{ rpm_file_name }}"
      mode: 0644
      owner: "root"
      group: "root"

  - name: yum -y localinstall nuage-netconf-manager-<number>.el7.x86_64.rpm
    yum:
      name: "/tmp/netconfmanager/{{ rpm_file_name }}"
      state: present

  - block:

    - name: Get the VSD truststore
      fetch:
        src: "/opt/vsd/jboss/standalone/configuration/vsd.truststore"
        dest: "/tmp/netconfmanager/"
        flat: yes

    - name: Get the Netconfmanager jks
      fetch:
        src: "/opt/vsd/ejbca/p12/netconfmgr.jks"
        dest: "/tmp/netconfmanager/"
        flat: yes
    delegate_to: vsd1.example.met

  - name: Copy to netconf manager
    copy:
      dest: "/opt/netconfmanager/conf/"
      src: "/tmp/netconfmanager/"

  - name: Delete the temporary directory
    file:
      path: /tmp/netconfmanager
      state: absent

  - name: Configure backend port numbers Port 61616 to be used for JMS messages. Port 7443 to be used for REST calls.
    command: ls

  - name: Configure front end port numbers 51515 MUST match `jms.port= in /opt/netconfmanager/conf/netconfmanager.properties 5666 MUST match `vsd.port in /opt/netconfmanager/conf/netconfmanager.properties
    command: ls

  - name: Edit the JMS topic
    command: sed -i 's/jms.topic.*/jms.topic=jms\/topic\/CNAMessages/' /opt/netconfmanager/conf/netconfmanager.properties

  - name: Edit the JMS queue
    command: sed -i 's/jms.queue.*/jms.queue=jms\/queue\/CNANetconf/' /opt/netconfmanager/conf/netconfmanager.properties

  - name: Edit the JMS User
    command: "sed -i 's/jms.user.*/jms.user={{ email }}/' /opt/netconfmanager/conf/netconfmanager.properties"

  - name: Edit the JMS password
    command: sed -i 's/jms.password.*/jms.password=password/' /opt/netconfmanager/conf/netconfmanager.properties

  - name: Enable and start Netconfmanager
    service:
      name: netconfmanager
      state: started
      enabled: yes

  - name: Check the newly created Netconf Managers discovered in VSD, by opening the Open Monitoring Console window in VSD
    command: ls

  remote_user: "{{ netconf_vm_username | default('root') }}"
  become: "{{ 'no' if netconf_vm_username | default('root') == 'root' else 'yes' }}"
  vars:
    ansible_become_pass: "{{ netconf_vm_password | default(None) }}"
  delegate_to: "{{ netconf_server }}"
